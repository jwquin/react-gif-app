{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategrs","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAW,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAKlB,SACE,uBACEO,KAAO,OACPC,MAAST,EACTU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,+FAIbC,EAJa,iDAIoCC,UAAUH,GAJ9C,0EAKAI,MAAMF,GALN,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAiBZM,GAjBY,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBb,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAE9B,OACI,sBAAKI,UAAY,6CAAjB,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAGjB,CAAEpB,IAEEqB,EDbwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAY,2CAAhB,SAA6DhB,IAC3DoB,GAAW,mBAAGJ,UAAY,oCAAf,yBAEb,qBAAKA,UAAY,YAAjB,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEUxBgB,EAvBM,WAEjB,MAAoCzC,mBAAS,CAAC,YAA9C,mBAAO0C,EAAP,KAAmBC,EAAnB,KAEE,OACE,qCACI,8CACA,cAAC,EAAD,CAAa5C,WAAc4C,IAC3B,uBACA,6BAEQD,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADLA,YCXnC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c69dd1f4.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategrs}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategrs(cate => [inputValue, ...cate ]); \r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n          <input\r\n            type = 'text' \r\n            value = {inputValue} \r\n            onChange = { handleInputChange} \r\n                 \r\n          /> \r\n          \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategrs: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\nexport const getGifs = async(category) => {\r\n\r\n    const apiKey = `qR1OJzqM3HJO0sDWwWRKWXgGuzTgZKSU`;\r\n   \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n   \r\n    return gifs;\r\n\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({url, title}) => {\r\n      \r\n    return (\r\n        <div className = 'card animate__animated animate__fadeInLeft'>\r\n        \r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>                       \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n   \r\n    return (\r\n        <>\r\n            <h3 className = 'animate__animated animate__fadeInDownBig' >{category}</h3>\r\n            { loading && <p className = 'animate__animated animate__zoomIn' >Cargando...</p>}\r\n           \r\n            <div className = \"card-grid\">\r\n                {\r\n                    images.map(img => (                        \r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        /> \r\n                    ))\r\n                } \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n \r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });  \r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then( imgs =>{\r\n            setState({\r\n                data: imgs,\r\n                loading:false\r\n            }) \r\n        });\r\n    }, [ category ]) \r\n\r\n    return state;\r\n    \r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Mad Men']);\r\n\r\n      return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategrs = {setCategories}/>\r\n            <hr />            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}